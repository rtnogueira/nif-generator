{"version":3,"sources":["store/configureStore.js","images/logo.png","components/Navbar.js","constants/nifTypes.js","util/nif.js","pages/NifGenerator.js","App.js","util/theme.js","serviceWorker.js","index.js","shared/state/root-reducer/index.js","store/configureStore.prod.js","shared/state/redux-drawer/actionsTypes.js","shared/state/redux-drawer/reducer.js","shared/state/redux-drawer/index.js"],"names":["module","exports","require","__webpack_require__","p","useStyles","drawerWidth","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","concat","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","Object","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","Navbar","useSelector","state","dispatch","useDispatch","classes","useTheme","react_default","a","createElement","className","AppBar","position","classnames","defineProperty","open","Toolbar","IconButton","color","aria-label","onClick","type","drawerActionsTypes","OPEN","edge","Menu_default","Typography","variant","noWrap","Drawer","anchor","paper","CLOSE","direction","ChevronLeft_default","ChevronRight_default","Divider","List","ListItem","button","key","ListItemIcon","AssignmentInd_default","ListItemText","primary","nifTypes","name","value","generateNif","startWithNum","randomNum","getRandomNum","toString","length","randomNif","checkDigit","getCheckDigit","exp","Math","floor","random","pow","num","module11","sum","split","reverse","forEach","curr","index","parseInt","withStyles","_quantityContainer","mainContainer","textAlign","image","margin","pageTitle","formContainer","breakpoints","down","flexDirection","inputContainer","minWidth","typeContainer","up","quantityContainer","resultContainer","resultList","maxWidth","nif","props","_useState","useState","quantity","_useState2","slicedToArray","inputValues","setinputValues","_useState3","_useState4","nifList","setNifList","handleChange","event","oldValues","target","Grid","container","item","xs","header","src","Logo","alt","FormControl","InputLabel","htmlFor","Select","onChange","input","Input","id","map","MenuItem","toConsumableArray","Array","e","i","Button","newNifList","push","generateNifList","ListItemSecondaryAction","FileCopy_default","createMuiTheme","palette","light","main","dark","contrastText","secondary","typography","useNextVariants","ReactGA","initialize","createBrowserHistory","listen","location","set","page","pathname","pageview","App","window","MuiThemeProvider_default","es","store","react_router_dom","basename","react_router","exact","path","component","NifGenerator","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","rootReducer","combineReducers","createStore","initialState","drawerReducer","arguments","undefined","actionTypes","d","__webpack_exports__","actionsTypes_namespaceObject","reducer"],"mappings":"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","file":"static/js/main.8f523e81.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\r\n    module.exports = require('./configureStore.prod');\r\n} else {\r\n    module.exports = require('./configureStore.dev');\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.d25b0223.png\";","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { actionsTypes as drawerActionsTypes } from '../shared/state/redux-drawer';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => {\r\n    return (\r\n        {\r\n            root: {\r\n                display: 'flex',\r\n            },\r\n            appBar: {\r\n                transition: theme.transitions.create(['margin', 'width'], {\r\n                    easing: theme.transitions.easing.sharp,\r\n                    duration: theme.transitions.duration.leavingScreen,\r\n                }),\r\n            },\r\n            appBarShift: {\r\n                width: `calc(100% - ${drawerWidth}px)`,\r\n                marginLeft: drawerWidth,\r\n                transition: theme.transitions.create(['margin', 'width'], {\r\n                    easing: theme.transitions.easing.easeOut,\r\n                    duration: theme.transitions.duration.enteringScreen,\r\n                }),\r\n            },\r\n            menuButton: {\r\n                marginRight: theme.spacing(2),\r\n            },\r\n            hide: {\r\n                display: 'none',\r\n            },\r\n            drawer: {\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n            drawerPaper: {\r\n                width: drawerWidth,\r\n            },\r\n            drawerHeader: {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                padding: '0 8px',\r\n                ...theme.mixins.toolbar,\r\n                justifyContent: 'flex-end',\r\n            },\r\n            content: {\r\n                flexGrow: 1,\r\n                padding: theme.spacing(3),\r\n                transition: theme.transitions.create('margin', {\r\n                    easing: theme.transitions.easing.sharp,\r\n                    duration: theme.transitions.duration.leavingScreen,\r\n                }),\r\n                marginLeft: -drawerWidth,\r\n            },\r\n            contentShift: {\r\n                transition: theme.transitions.create('margin', {\r\n                    easing: theme.transitions.easing.easeOut,\r\n                    duration: theme.transitions.duration.enteringScreen,\r\n                }),\r\n                marginLeft: 0,\r\n            },\r\n        }\r\n    )\r\n});\r\n\r\nexport default function Navbar() {\r\n    const drawer = useSelector(state => state.drawer);\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles(drawer.width)();\r\n    const theme = useTheme();\r\n\r\n    function handleDrawerOpen() {\r\n        dispatch({ type: drawerActionsTypes.OPEN });\r\n    }\r\n\r\n    function handleDrawerClose() {\r\n        dispatch({ type: drawerActionsTypes.CLOSE });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={classnames(classes.appBar, {\r\n                    [classes.appBarShift]: drawer.open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={classnames(classes.menuButton, drawer.open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Generator of Things\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={drawer.open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key={'NIF'}>\r\n                        <ListItemIcon>\r\n                            <AssignmentInd />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary='NIF' />\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n","export default [\r\n    {\r\n        name: 'pessoa singular',\r\n        value: '1',\r\n    },\r\n    {\r\n        name: 'pessoa singular',\r\n        value: '2',\r\n    },\r\n    {\r\n        name: 'pessoa singular (a partir de julho de 2019)',\r\n        value: '3',\r\n    },\r\n    {\r\n        name: 'pessoa singular não residente',\r\n        value: '45',\r\n    },\r\n    {\r\n        name: 'pessoa colectiva',\r\n        value: '5',\r\n    },\r\n    {\r\n        name: 'administração pública (Central, Regional ou Local)',\r\n        value: '6',\r\n    },\r\n    {\r\n        name: 'pessoa colectiva não residente',\r\n        value: '71',\r\n    },\r\n    {\r\n        name: 'herança indivisa',\r\n        value: '70',\r\n    },\r\n    {\r\n        name: 'herança indivisa',\r\n        value: '74',\r\n    },\r\n    {\r\n        name: 'herança indivisa',\r\n        value: '75',\r\n    },\r\n    {\r\n        name: 'fundos de investimento',\r\n        value: '72',\r\n    },\r\n    {\r\n        name: 'atribuição oficiosa',\r\n        value: '77',\r\n    },\r\n    {\r\n        name: 'atribuição oficiosa não residentes (processo VAT REFUND)',\r\n        value: '78',\r\n    },\r\n    {\r\n        name: 'regime excepcional',\r\n        value: '79',\r\n    },\r\n    {\r\n        name: 'empresário em nome individual (extinto)',\r\n        value: '8',\r\n    },\r\n    {\r\n        name: 'pessoa colectiva irregular ou número provisório',\r\n        value: '9',\r\n    },\r\n    {\r\n        name: 'condominios e sociedades irregulares',\r\n        value: '90',\r\n    },\r\n    {\r\n        name: 'condominios e sociedades irregulares',\r\n        value: '91',\r\n    },\r\n    {\r\n        name: 'não residentes sem estabelecimento estável',\r\n        value: '98',\r\n    },\r\n    {\r\n        name: 'sociedades civis sem personalidade jurídica',\r\n        value: '99',\r\n    },\r\n];","export const generateNif = (startWithNum) => {\r\n    const randomNum = getRandomNum(8-startWithNum.toString().length);\r\n    const randomNif = `${startWithNum}${randomNum}`;\r\n    const checkDigit = getCheckDigit(randomNif);\r\n\r\n    return `${randomNif}${checkDigit}`;\r\n}\r\n\r\nconst getRandomNum = (exp) => {\r\n    return Math.floor(Math.random() * Math.pow(9, exp)) + Math.pow(8, exp);\r\n}\r\n\r\nconst getCheckDigit = (num) => {\r\n    if (!num) return;\r\n\r\n    let sum = 0;\r\n    let module11 = 0;\r\n\r\n    num\r\n        .toString()\r\n        .split(\"\")\r\n        .reverse()\r\n        .forEach((curr, index) => {\r\n            sum += (parseInt(curr, 10) * (index + 2));\r\n        });\r\n\r\n    module11 = sum % 11;\r\n\r\n    return module11 < 2 ? 0 : 11 - module11;\r\n};","import React, { useState } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Input from '@material-ui/core/Input';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FileCopy from '@material-ui/icons/FileCopy';\r\nimport Logo from '../images/logo.png';\r\nimport nifTypes from '../constants/nifTypes';\r\nimport { generateNif } from '../util/nif';\r\n\r\nconst styles = theme => ({\r\n    mainContainer: {\r\n        textAlign: 'center',\r\n    },\r\n    image: {\r\n        margin: '20px auto',\r\n        width: '100px',\r\n    },\r\n    pageTitle: {\r\n        margin: '10px auto',\r\n    },\r\n    formContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    inputContainer: {\r\n        textAlign: 'left',\r\n        [theme.breakpoints.down('xs')]: {\r\n            minWidth: '100%',\r\n        },\r\n    },\r\n    typeContainer: {\r\n        [theme.breakpoints.up('xs')]: {\r\n            minWidth: '340px',\r\n        },\r\n    },\r\n    quantityContainer: {\r\n        [theme.breakpoints.up('xs')]: {\r\n            margin: '0 20px',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            margin: '20px 0',\r\n        },\r\n    },\r\n    resultContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        margin: '20px 0',\r\n    },\r\n    resultList: {     \r\n        maxWidth: '250px',\r\n    },\r\n    nif: {\r\n        marginRight: '20px',\r\n    }\r\n});\r\n\r\nconst NifGenerator = (props) => {\r\n    const { classes } = props;\r\n\r\n    const [inputValues, setinputValues] = useState({\r\n        quantity: 1,\r\n        type: 2,\r\n    });\r\n\r\n    const [nifList, setNifList] = useState([]);\r\n\r\n    function handleChange(event) {\r\n        setinputValues(oldValues => ({\r\n            ...oldValues,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n    }\r\n\r\n    function handleGenerateClick() {\r\n        generateNifList();\r\n    }\r\n\r\n    function generateNifList() {\r\n        let newNifList = [];\r\n\r\n        for (let i=0; i < inputValues.quantity; i++) {\r\n            const randomNif = generateNif(inputValues.type);\r\n\r\n            newNifList.push(randomNif);\r\n        }\r\n\r\n        setNifList(() => newNifList)\r\n    }\r\n    \r\n    return (\r\n        <Grid container spacing={2} className={ classes.mainContainer }>\r\n            <Grid item xs={12} className={ classes.header }>\r\n                <img src={Logo} alt='app icon' className={ classes.image } />\r\n                <Typography variant='h4' className={ classes.pageTitle }>\r\n                    NIF Generator\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} className={ classes.formContainer }>\r\n                <FormControl className={`${classes.inputContainer} ${classes.typeContainer}`}>\r\n                    <InputLabel htmlFor=\"type\">\r\n                        Type\r\n                    </InputLabel>\r\n                    <Select\r\n                        value={inputValues.type}\r\n                        onChange={handleChange}\r\n                        className={ classes.input }\r\n                        input={<Input name=\"type\" id=\"type\" />}>\r\n                            {\r\n                                nifTypes.map(nif => (\r\n                                    <MenuItem key={nif.value} value={nif.value}>{`${nif.name} [${nif.value}]`}</MenuItem>\r\n                                ))\r\n                            }\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl className={`${classes.inputContainer} ${classes.quantityContainer}`}>\r\n                    <InputLabel htmlFor=\"quantity\">\r\n                        Quantity\r\n                    </InputLabel>\r\n                    <Select\r\n                        value={inputValues.quantity}\r\n                        onChange={handleChange}\r\n                        className={ classes.input }\r\n                        input={<Input name=\"quantity\" id=\"quantity\" />}>\r\n                        {\r\n                            [...Array(20)].map((e, i) => {\r\n                                i++;\r\n                                return (\r\n                                    <MenuItem key={i} value={i}>{i}</MenuItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={ handleGenerateClick }\r\n                    className={ classes.button }>\r\n                        Generate\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={12} className={ classes.resultContainer }>\r\n                <List className={ `${classes.resultList}` }>\r\n                    {\r\n                        nifList.map((nif) => (\r\n                            <ListItem key={ nif } >\r\n                                <ListItemText primary={ nif } className={ `${classes.nif}` } />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"end\" aria-label=\"copy\">\r\n                                        <FileCopy />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        ))\r\n                    }\r\n                </List>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(NifGenerator);\r\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport ReactGA from 'react-ga';\nimport './App.css';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport themeFile from './util/theme';\nimport { createBrowserHistory } from \"history\";\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\n\n// Components\nimport Navbar from './components/Navbar';\n\n// Pages\nimport NifGenerator from './pages/NifGenerator';\n\nconst theme = createMuiTheme(themeFile);\n\nReactGA.initialize(\"UA-146599861-1\");\n\nconst history = createBrowserHistory();\n\nhistory.listen(location => {\n  ReactGA.set({ page: location.pathname });\n  ReactGA.pageview(location.pathname);\n});\n\nclass App extends Component {\n  componentDidMount() {\n    ReactGA.pageview(window.location.pathname);\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n          <HashRouter basename='/'>\n            <Navbar />\n            <div className='container'>\n              <Switch>\n                <Route exact path='/' component={NifGenerator} />\n                <Route component={NifGenerator} />\n              </Switch>\n            </div>\n          </HashRouter>\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","export default {\r\n    palette: {\r\n        primary: {\r\n        light: '#33c9dc',\r\n        main: '#00bcd4',\r\n        dark: '#008394',\r\n        contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n        light: '#ff6333',\r\n        main: '#ff3d00',\r\n        dark: '#b22a00',\r\n        contrastText: '#fff',\r\n        },\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    }\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\r\nimport { combineReducers } from 'redux';\r\nimport { reducer as drawer } from '../redux-drawer';\r\n\r\nconst rootReducer = combineReducers({\r\n    drawer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport rootReducer from '../shared/state/root-reducer';\r\n\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState\r\n);\r\n\r\nexport default store;","export const OPEN = 'OPEN';\r\nexport const CLOSE = 'CLOSE';","import * as actionTypes from './actionsTypes';\r\n\r\nconst initialState = {\r\n    width: 240,\r\n    open: false\r\n};\r\n\r\nfunction drawerReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.OPEN:\r\n            return {\r\n                ...state,\r\n                open: true\r\n            };\r\n        case actionTypes.CLOSE:\r\n            return {\r\n                ...state,\r\n                open: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default drawerReducer;\r\n","import * as actionsTypes from './actionsTypes';\r\nimport reducer from './reducer';\r\n\r\nexport { actionsTypes, reducer };\r\n"],"sourceRoot":""}