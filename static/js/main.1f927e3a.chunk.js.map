{"version":3,"sources":["store/configureStore.js","images/logo.png","components/nav-bar/Navbar.js","util/nif.js","shared/hooks/useCopy.js","components/copy-to-clipboard/CopyToClipboard.js","constants/nifTypes.js","pages/nif-generator/NifGenerator.js","App.js","util/theme.js","serviceWorker.js","index.js","shared/state/root-reducer/index.js","store/configureStore.prod.js","shared/state/redux-drawer/actionsTypes.js","shared/state/redux-drawer/reducer.js"],"names":["module","exports","require","Navbar","drawerWidth","drawer","useSelector","state","dispatch","useDispatch","classes","width","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","useTheme","className","AppBar","position","classnames","open","Toolbar","IconButton","color","aria-label","onClick","type","drawerActionsTypes","OPEN","edge","Typography","variant","noWrap","Drawer","anchor","paper","CLOSE","direction","Divider","List","ListItem","button","key","ListItemIcon","ListItemText","primary","generateNif","startWithNum","randomNum","getRandomNum","toString","length","randomNif","checkDigit","getCheckDigit","exp","Math","floor","random","pow","num","module11","sum","split","reverse","forEach","curr","index","parseInt","useCopy","textToCopy","successDuration","useState","isCopied","setIsCopied","useEffect","timer","setTimeout","clearTimeout","copyToClipboard","propTypes","PropTypes","string","isRequired","number","CopyToClipboard","value","copyValue","name","withStyles","mainContainer","textAlign","image","margin","pageTitle","formContainer","breakpoints","down","flexDirection","inputContainer","minWidth","typeContainer","up","quantityContainer","resultContainer","resultList","maxWidth","nif","props","quantity","inputValues","setinputValues","nifList","setNifList","handleChange","event","oldValues","target","Grid","container","item","xs","header","src","Logo","alt","FormControl","InputLabel","htmlFor","Select","onChange","input","Input","id","nifTypes","map","MenuItem","Array","e","i","Button","newNifList","push","generateNifList","ListItemSecondaryAction","createMuiTheme","palette","light","main","dark","contrastText","secondary","typography","useNextVariants","ReactGA","initialize","createBrowserHistory","listen","location","set","page","pathname","pageview","App","window","store","basename","exact","path","component","NifGenerator","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","rootReducer","combineReducers","createStore","initialState","drawerReducer","action","actionTypes"],"mappings":"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","file":"static/js/main.1f927e3a.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\n    module.exports = require('./configureStore.prod');\n} else {\n    module.exports = require('./configureStore.dev');\n}\n","module.exports = __webpack_public_path__ + \"static/media/logo.d25b0223.png\";","import React from 'react';\nimport classnames from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { actionsTypes as drawerActionsTypes } from '../../shared/state/redux-drawer';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\n\nconst useStyles = (drawerWidth) => makeStyles((theme) => {\n    return (\n        {\n            root: {\n                display: 'flex',\n            },\n            appBar: {\n                transition: theme.transitions.create(['margin', 'width'], {\n                    easing: theme.transitions.easing.sharp,\n                    duration: theme.transitions.duration.leavingScreen,\n                }),\n            },\n            appBarShift: {\n                width: `calc(100% - ${drawerWidth}px)`,\n                marginLeft: drawerWidth,\n                transition: theme.transitions.create(['margin', 'width'], {\n                    easing: theme.transitions.easing.easeOut,\n                    duration: theme.transitions.duration.enteringScreen,\n                }),\n            },\n            menuButton: {\n                marginRight: theme.spacing(2),\n            },\n            hide: {\n                display: 'none',\n            },\n            drawer: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n            drawerPaper: {\n                width: drawerWidth,\n            },\n            drawerHeader: {\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0 8px',\n                ...theme.mixins.toolbar,\n                justifyContent: 'flex-end',\n            },\n            content: {\n                flexGrow: 1,\n                padding: theme.spacing(3),\n                transition: theme.transitions.create('margin', {\n                    easing: theme.transitions.easing.sharp,\n                    duration: theme.transitions.duration.leavingScreen,\n                }),\n                marginLeft: -drawerWidth,\n            },\n            contentShift: {\n                transition: theme.transitions.create('margin', {\n                    easing: theme.transitions.easing.easeOut,\n                    duration: theme.transitions.duration.enteringScreen,\n                }),\n                marginLeft: 0,\n            },\n        }\n    )\n});\n\nconst Navbar = () => {\n    const drawer = useSelector(state => state.drawer);\n    const dispatch = useDispatch()\n    const classes = useStyles(drawer.width)();\n    const theme = useTheme();\n\n    function handleDrawerOpen() {\n        dispatch({ type: drawerActionsTypes.OPEN });\n    }\n\n    function handleDrawerClose() {\n        dispatch({ type: drawerActionsTypes.CLOSE });\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar\n                position=\"fixed\"\n                className={classnames(classes.appBar, {\n                    [classes.appBarShift]: drawer.open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={classnames(classes.menuButton, drawer.open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Generator of Things\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={drawer.open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    <ListItem button key={'NIF'}>\n                        <ListItemIcon>\n                            <AssignmentInd />\n                        </ListItemIcon>\n                        <ListItemText primary='NIF' />\n                    </ListItem>\n                </List>\n            </Drawer>\n        </div>\n    );\n};\n\nexport default Navbar;","export const generateNif = (startWithNum) => {\n    const randomNum = getRandomNum(8-startWithNum.toString().length);\n    const randomNif = `${startWithNum}${randomNum}`;\n    const checkDigit = getCheckDigit(randomNif);\n\n    return `${randomNif}${checkDigit}`;\n}\n\nconst getRandomNum = (exp) => {\n    return Math.floor(Math.random() * Math.pow(9, exp)) + Math.pow(8, exp);\n}\n\nconst getCheckDigit = (num) => {\n    if (!num) return;\n\n    let sum = 0;\n    let module11 = 0;\n\n    num\n        .toString()\n        .split(\"\")\n        .reverse()\n        .forEach((curr, index) => {\n            sum += (parseInt(curr, 10) * (index + 2));\n        });\n\n    module11 = sum % 11;\n\n    return module11 < 2 ? 0 : 11 - module11;\n};","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport copyToClipboard from 'copy-to-clipboard';\n\nconst useCopy = (textToCopy, successDuration = 1000) => {\n    const [isCopied, setIsCopied] = useState(false);\n\n    useEffect(() => {\n        if (isCopied && successDuration) {\n            const timer = setTimeout(() => setIsCopied(false), successDuration);\n\n            return () => {\n                clearTimeout(timer);\n            };\n        }\n    }, [isCopied, successDuration]);\n\n    return [\n        isCopied,\n        () => {\n            copyToClipboard(textToCopy);\n            setIsCopied(true);\n        },\n    ];\n};\n\nuseCopy.propTypes = {\n    textToCopy: PropTypes.string.isRequired,\n    successDuration: PropTypes.number,\n};\n\nexport default useCopy;\n","import FileCopy from '@material-ui/icons/FileCopy';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckCircle from '@material-ui/icons/CheckCircle';\nimport PropTypes from 'prop-types';\nimport useCopy from '../../shared/hooks/useCopy';\nimport React from 'react';\n\nconst CopyToClipboard = ({ value }) => {\n    const [isCopied, copyValue] = useCopy(value);\n\n    return (\n        <IconButton edge=\"end\" aria-label=\"copy\" onClick={() => copyValue(value)}>\n            {isCopied ? <CheckCircle /> : <FileCopy /> }\n        </IconButton>\n    );\n};\n\nCopyToClipboard.propTypes = {\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n};\n\nexport default CopyToClipboard;\n","export default [\n    {\n        name: 'pessoa singular',\n        value: '1',\n    },\n    {\n        name: 'pessoa singular',\n        value: '2',\n    },\n    {\n        name: 'pessoa singular (a partir de julho de 2019)',\n        value: '3',\n    },\n    {\n        name: 'pessoa singular',\n        value: '38',\n    },\n    {\n        name: 'pessoa singular',\n        value: '39',\n    },\n    {\n        name: 'pessoa singular não residente',\n        value: '45',\n    },\n    {\n        name: 'pessoa colectiva',\n        value: '5',\n    },\n    {\n        name: 'administração pública (Central, Regional ou Local)',\n        value: '6',\n    },\n    {\n        name: 'pessoa colectiva não residente',\n        value: '71',\n    },\n    {\n        name: 'herança indivisa',\n        value: '70',\n    },\n    {\n        name: 'herança indivisa',\n        value: '74',\n    },\n    {\n        name: 'herança indivisa',\n        value: '75',\n    },\n    {\n        name: 'fundos de investimento',\n        value: '72',\n    },\n    {\n        name: 'atribuição oficiosa',\n        value: '77',\n    },\n    {\n        name: 'atribuição oficiosa não residentes (processo VAT REFUND)',\n        value: '78',\n    },\n    {\n        name: 'regime excepcional',\n        value: '79',\n    },\n    {\n        name: 'empresário em nome individual (extinto)',\n        value: '8',\n    },\n    {\n        name: 'pessoa colectiva irregular ou número provisório',\n        value: '9',\n    },\n    {\n        name: 'condominios e sociedades irregulares',\n        value: '90',\n    },\n    {\n        name: 'condominios e sociedades irregulares',\n        value: '91',\n    },\n    {\n        name: 'não residentes sem estabelecimento estável',\n        value: '98',\n    },\n    {\n        name: 'sociedades civis sem personalidade jurídica',\n        value: '99',\n    },\n];","import { generateNif } from '../../util/nif';\nimport { CopyToClipboard } from '../../components/copy-to-clipboard';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Input from '@material-ui/core/Input';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Logo from '../../images/logo.png';\nimport nifTypes from '../../constants/nifTypes';\nimport React, { useState } from 'react';\n\nconst styles = theme => ({\n    mainContainer: {\n        textAlign: 'center',\n    },\n    image: {\n        margin: '20px auto',\n        width: '100px',\n    },\n    pageTitle: {\n        margin: '10px auto',\n    },\n    formContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n    },\n    inputContainer: {\n        textAlign: 'left',\n        [theme.breakpoints.down('xs')]: {\n            minWidth: '100%',\n        },\n    },\n    typeContainer: {\n        [theme.breakpoints.up('xs')]: {\n            minWidth: '340px',\n        },\n    },\n    quantityContainer: {\n        [theme.breakpoints.up('xs')]: {\n            margin: '0 20px',\n        },\n        [theme.breakpoints.down('xs')]: {\n            margin: '20px 0',\n        },\n    },\n    resultContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        margin: '20px 0',\n    },\n    resultList: {     \n        maxWidth: '250px',\n    },\n    nif: {\n        marginRight: '20px',\n    }\n});\n\nconst NifGenerator = (props) => {\n    const { classes } = props;\n\n    const [inputValues, setinputValues] = useState({\n        quantity: 1,\n        type: 2,\n    });\n\n    const [nifList, setNifList] = useState([]);\n\n    function handleChange(event) {\n        setinputValues(oldValues => ({\n            ...oldValues,\n            [event.target.name]: event.target.value,\n        }));\n    }\n\n    function handleGenerateClick() {\n        generateNifList();\n    }\n\n    function generateNifList() {\n        let newNifList = [];\n\n        for (let i=0; i < inputValues.quantity; i++) {\n            const randomNif = generateNif(inputValues.type);\n\n            newNifList.push(randomNif);\n        }\n\n        setNifList(() => newNifList)\n    }\n    \n    return (\n        <Grid container spacing={2} className={ classes.mainContainer }>\n            <Grid item xs={12} className={ classes.header }>\n                <img src={Logo} alt='app icon' className={ classes.image } />\n                <Typography variant='h4' className={ classes.pageTitle }>\n                    NIF Generator\n                </Typography>\n            </Grid>\n            <Grid item xs={12} className={ classes.formContainer }>\n                <FormControl className={`${classes.inputContainer} ${classes.typeContainer}`}>\n                    <InputLabel htmlFor=\"type\">\n                        Type\n                    </InputLabel>\n                    <Select\n                        value={inputValues.type}\n                        onChange={handleChange}\n                        className={ classes.input }\n                        input={<Input name=\"type\" id=\"type\" />}>\n                            {\n                                nifTypes.map(nif => (\n                                    <MenuItem key={nif.value} value={nif.value}>{`${nif.name} [${nif.value}]`}</MenuItem>\n                                ))\n                            }\n                    </Select>\n                </FormControl>\n                <FormControl className={`${classes.inputContainer} ${classes.quantityContainer}`}>\n                    <InputLabel htmlFor=\"quantity\">\n                        Quantity\n                    </InputLabel>\n                    <Select\n                        value={inputValues.quantity}\n                        onChange={handleChange}\n                        className={ classes.input }\n                        input={<Input name=\"quantity\" id=\"quantity\" />}>\n                        {\n                            [...Array(20)].map((e, i) => {\n                                i++;\n                                return (\n                                    <MenuItem key={i} value={i}>{i}</MenuItem>\n                                )\n                            })\n                        }\n                    </Select>\n                </FormControl>\n                <Button \n                    variant=\"contained\" \n                    color=\"primary\"\n                    onClick={ handleGenerateClick }\n                    className={ classes.button }>\n                        Generate\n                </Button>\n            </Grid>\n            <Grid item xs={12} className={ classes.resultContainer }>\n                <List className={ `${classes.resultList}` }>\n                    {\n                        nifList.map((nif) => (\n                            <ListItem key={ nif } >\n                                <ListItemText primary={ nif } className={ `${classes.nif}` } />\n                                <ListItemSecondaryAction>\n                                    <CopyToClipboard value={ nif } />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        ))\n                    }\n                </List>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default withStyles(styles)(NifGenerator);\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport ReactGA from 'react-ga';\nimport './App.css';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport themeFile from './util/theme';\nimport { createBrowserHistory } from \"history\";\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store/configureStore';\n\n// Components\nimport { NavBar } from './components/nav-bar';\n\n// Pages\nimport { NifGenerator } from './pages/nif-generator/';\n\nconst theme = createMuiTheme(themeFile);\n\nReactGA.initialize(\"UA-146599861-1\");\n\nconst history = createBrowserHistory();\n\nhistory.listen(location => {\n  ReactGA.set({ page: location.pathname });\n  ReactGA.pageview(location.pathname);\n});\n\nclass App extends Component {\n  componentDidMount() {\n    ReactGA.pageview(window.location.pathname);\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n          <HashRouter basename='/'>\n            <NavBar />\n            <div className='container'>\n              <Switch>\n                <Route exact path='/' component={NifGenerator} />\n                <Route component={NifGenerator} />\n              </Switch>\n            </div>\n          </HashRouter>\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","export default {\n    palette: {\n        primary: {\n        light: '#33c9dc',\n        main: '#00bcd4',\n        dark: '#008394',\n        contrastText: '#fff',\n        },\n        secondary: {\n        light: '#ff6333',\n        main: '#ff3d00',\n        dark: '#b22a00',\n        contrastText: '#fff',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n    }\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nimport { combineReducers } from 'redux';\nimport { reducer as drawer } from '../redux-drawer';\n\nconst rootReducer = combineReducers({\n    drawer\n});\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from '../shared/state/root-reducer';\n\nconst initialState = {};\n\nconst store = createStore(\n    rootReducer, \n    initialState\n);\n\nexport default store;","export const OPEN = 'OPEN';\nexport const CLOSE = 'CLOSE';","import * as actionTypes from './actionsTypes';\n\nconst initialState = {\n    width: 240,\n    open: false\n};\n\nfunction drawerReducer(state = initialState, action) {\n    switch (action.type) {\n        case actionTypes.OPEN:\n            return {\n                ...state,\n                open: true\n            };\n        case actionTypes.CLOSE:\n            return {\n                ...state,\n                open: false\n            };\n        default:\n            return state;\n    }\n}\n\nexport default drawerReducer;\n"],"sourceRoot":""}