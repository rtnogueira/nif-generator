{"version":3,"sources":["store/configureStore.js","images/logo.png","components/nav-bar/Navbar.js","util/nif.js","shared/hooks/useCopy.js","components/copy-to-clipboard/CopyToClipboard.js","components/export-csv/ExportCSV.js","constants/nifTypes.js","pages/nif-generator/NifGenerator.js","App.js","util/theme.js","serviceWorker.js","index.js","shared/state/root-reducer/index.js","store/configureStore.prod.js","shared/state/redux-drawer/actionsTypes.js","shared/state/redux-drawer/reducer.js"],"names":["module","exports","require","Navbar","drawerWidth","drawer","useSelector","state","dispatch","useDispatch","classes","width","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","useTheme","className","AppBar","position","classnames","open","Toolbar","IconButton","color","aria-label","onClick","type","drawerActionsTypes","OPEN","edge","Typography","variant","noWrap","Drawer","anchor","paper","CLOSE","direction","Divider","List","ListItem","button","key","ListItemIcon","ListItemText","primary","generateNif","startWithNum","randomNum","getRandomNum","toString","length","randomNif","checkDigit","getCheckDigit","exp","Math","floor","random","pow","num","module11","sum","split","reverse","forEach","curr","index","parseInt","useCopy","textToCopy","successDuration","useState","isCopied","setIsCopied","useEffect","timer","setTimeout","clearTimeout","copyToClipboard","propTypes","PropTypes","string","isRequired","number","CopyToClipboard","value","copyValue","ExportCSV","csvData","fileName","Button","wb","Sheets","XLSX","json_to_sheet","map","NIF","SheetNames","excelBuffer","bookType","data","Blob","FileSaver","exportToCSVFn","name","withStyles","mainContainer","textAlign","image","margin","pageTitle","formContainer","breakpoints","down","flexDirection","inputContainer","minWidth","typeContainer","up","quantityContainer","resultContainer","resultList","maxWidth","nif","props","quantity","inputValues","setinputValues","nifList","setNifList","handleChange","event","oldValues","target","Grid","container","item","xs","header","src","Logo","alt","FormControl","InputLabel","htmlFor","Select","onChange","input","Input","id","nifTypes","MenuItem","Array","e","i","newNifList","push","generateNifList","ListItemSecondaryAction","createMuiTheme","palette","light","main","dark","contrastText","secondary","typography","useNextVariants","ReactGA","initialize","createBrowserHistory","listen","location","set","page","pathname","pageview","App","window","store","basename","exact","path","component","NifGenerator","Component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","rootReducer","combineReducers","createStore","initialState","drawerReducer","action","actionTypes"],"mappings":"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","file":"static/js/main.4e86a1a0.chunk.js","sourcesContent":["if (process.env.NODE_ENV === 'production') {\r\n    module.exports = require('./configureStore.prod');\r\n} else {\r\n    module.exports = require('./configureStore.dev');\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.d25b0223.png\";","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { actionsTypes as drawerActionsTypes } from '../../shared/state/redux-drawer';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport AssignmentInd from '@material-ui/icons/AssignmentInd';\r\n\r\nconst useStyles = (drawerWidth) => makeStyles((theme) => {\r\n    return (\r\n        {\r\n            root: {\r\n                display: 'flex',\r\n            },\r\n            appBar: {\r\n                transition: theme.transitions.create(['margin', 'width'], {\r\n                    easing: theme.transitions.easing.sharp,\r\n                    duration: theme.transitions.duration.leavingScreen,\r\n                }),\r\n            },\r\n            appBarShift: {\r\n                width: `calc(100% - ${drawerWidth}px)`,\r\n                marginLeft: drawerWidth,\r\n                transition: theme.transitions.create(['margin', 'width'], {\r\n                    easing: theme.transitions.easing.easeOut,\r\n                    duration: theme.transitions.duration.enteringScreen,\r\n                }),\r\n            },\r\n            menuButton: {\r\n                marginRight: theme.spacing(2),\r\n            },\r\n            hide: {\r\n                display: 'none',\r\n            },\r\n            drawer: {\r\n                width: drawerWidth,\r\n                flexShrink: 0,\r\n            },\r\n            drawerPaper: {\r\n                width: drawerWidth,\r\n            },\r\n            drawerHeader: {\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                padding: '0 8px',\r\n                ...theme.mixins.toolbar,\r\n                justifyContent: 'flex-end',\r\n            },\r\n            content: {\r\n                flexGrow: 1,\r\n                padding: theme.spacing(3),\r\n                transition: theme.transitions.create('margin', {\r\n                    easing: theme.transitions.easing.sharp,\r\n                    duration: theme.transitions.duration.leavingScreen,\r\n                }),\r\n                marginLeft: -drawerWidth,\r\n            },\r\n            contentShift: {\r\n                transition: theme.transitions.create('margin', {\r\n                    easing: theme.transitions.easing.easeOut,\r\n                    duration: theme.transitions.duration.enteringScreen,\r\n                }),\r\n                marginLeft: 0,\r\n            },\r\n        }\r\n    )\r\n});\r\n\r\nconst Navbar = () => {\r\n    const drawer = useSelector(state => state.drawer);\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles(drawer.width)();\r\n    const theme = useTheme();\r\n\r\n    function handleDrawerOpen() {\r\n        dispatch({ type: drawerActionsTypes.OPEN });\r\n    }\r\n\r\n    function handleDrawerClose() {\r\n        dispatch({ type: drawerActionsTypes.CLOSE });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={classnames(classes.appBar, {\r\n                    [classes.appBarShift]: drawer.open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={classnames(classes.menuButton, drawer.open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        Generator of Things\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={drawer.open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key={'NIF'}>\r\n                        <ListItemIcon>\r\n                            <AssignmentInd />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary='NIF' />\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","export const generateNif = (startWithNum) => {\r\n    const randomNum = getRandomNum(8-startWithNum.toString().length);\r\n    const randomNif = `${startWithNum}${randomNum}`;\r\n    const checkDigit = getCheckDigit(randomNif);\r\n\r\n    return `${randomNif}${checkDigit}`;\r\n}\r\n\r\nconst getRandomNum = (exp) => {\r\n    return Math.floor(Math.random() * Math.pow(9, exp)) + Math.pow(8, exp);\r\n}\r\n\r\nconst getCheckDigit = (num) => {\r\n    if (!num) return;\r\n\r\n    let sum = 0;\r\n    let module11 = 0;\r\n\r\n    num\r\n        .toString()\r\n        .split(\"\")\r\n        .reverse()\r\n        .forEach((curr, index) => {\r\n            sum += (parseInt(curr, 10) * (index + 2));\r\n        });\r\n\r\n    module11 = sum % 11;\r\n\r\n    return module11 < 2 ? 0 : 11 - module11;\r\n};","import { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport copyToClipboard from 'copy-to-clipboard';\r\n\r\nconst useCopy = (textToCopy, successDuration = 1000) => {\r\n    const [isCopied, setIsCopied] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (isCopied && successDuration) {\r\n            const timer = setTimeout(() => setIsCopied(false), successDuration);\r\n\r\n            return () => {\r\n                clearTimeout(timer);\r\n            };\r\n        }\r\n    }, [isCopied, successDuration]);\r\n\r\n    return [\r\n        isCopied,\r\n        () => {\r\n            copyToClipboard(textToCopy);\r\n            setIsCopied(true);\r\n        },\r\n    ];\r\n};\r\n\r\nuseCopy.propTypes = {\r\n    textToCopy: PropTypes.string.isRequired,\r\n    successDuration: PropTypes.number,\r\n};\r\n\r\nexport default useCopy;\r\n","import FileCopy from '@material-ui/icons/FileCopy';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CheckCircle from '@material-ui/icons/CheckCircle';\r\nimport PropTypes from 'prop-types';\r\nimport useCopy from '../../shared/hooks/useCopy';\r\nimport React from 'react';\r\n\r\nconst CopyToClipboard = ({ value }) => {\r\n    const [isCopied, copyValue] = useCopy(value);\r\n\r\n    return (\r\n        <IconButton edge=\"end\" aria-label=\"copy\" onClick={() => copyValue(value)}>\r\n            {isCopied ? <CheckCircle /> : <FileCopy /> }\r\n        </IconButton>\r\n    );\r\n};\r\n\r\nCopyToClipboard.propTypes = {\r\n    value: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string,\r\n    ]).isRequired,\r\n};\r\n\r\nexport default CopyToClipboard;\r\n","import * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport React from 'react'\r\n\r\nconst ExportCSV = ({csvData, fileName}) => {\r\n\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension = '.xlsx';\r\n\r\n    const exportToCSVFn = (csvData, fileName) => {\r\n        const ws = XLSX.utils.json_to_sheet(csvData.map((value) => ({ NIF: value })));\r\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\r\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\r\n        const data = new Blob([excelBuffer], {type: fileType});\r\n        FileSaver.saveAs(data, fileName + fileExtension);\r\n    }\r\n\r\n    return (\r\n        <Button \r\n            variant=\"contained\" \r\n            color=\"secondary\"\r\n            onClick={ () => exportToCSVFn(csvData, fileName) } >\r\n                Download\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default ExportCSV;","export default [\r\n    {\r\n        name: 'pessoa singular',\r\n        value: '1',\r\n    },\r\n    {\r\n        name: 'pessoa singular',\r\n        value: '2',\r\n    },\r\n    {\r\n        name: 'pessoa singular (a partir de julho de 2019)',\r\n        value: '3',\r\n    },\r\n    {\r\n        name: 'pessoa singular',\r\n        value: '38',\r\n    },\r\n    {\r\n        name: 'pessoa singular',\r\n        value: '39',\r\n    },\r\n    {\r\n        name: 'pessoa singular não residente',\r\n        value: '45',\r\n    },\r\n    {\r\n        name: 'pessoa colectiva',\r\n        value: '5',\r\n    },\r\n    {\r\n        name: 'administração pública (Central, Regional ou Local)',\r\n        value: '6',\r\n    },\r\n    {\r\n        name: 'pessoa colectiva não residente',\r\n        value: '71',\r\n    },\r\n    {\r\n        name: 'herança indivisa',\r\n        value: '70',\r\n    },\r\n    {\r\n        name: 'herança indivisa',\r\n        value: '74',\r\n    },\r\n    {\r\n        name: 'herança indivisa',\r\n        value: '75',\r\n    },\r\n    {\r\n        name: 'fundos de investimento',\r\n        value: '72',\r\n    },\r\n    {\r\n        name: 'atribuição oficiosa',\r\n        value: '77',\r\n    },\r\n    {\r\n        name: 'atribuição oficiosa não residentes (processo VAT REFUND)',\r\n        value: '78',\r\n    },\r\n    {\r\n        name: 'regime excepcional',\r\n        value: '79',\r\n    },\r\n    {\r\n        name: 'empresário em nome individual (extinto)',\r\n        value: '8',\r\n    },\r\n    {\r\n        name: 'pessoa colectiva irregular ou número provisório',\r\n        value: '9',\r\n    },\r\n    {\r\n        name: 'condominios e sociedades irregulares',\r\n        value: '90',\r\n    },\r\n    {\r\n        name: 'condominios e sociedades irregulares',\r\n        value: '91',\r\n    },\r\n    {\r\n        name: 'não residentes sem estabelecimento estável',\r\n        value: '98',\r\n    },\r\n    {\r\n        name: 'sociedades civis sem personalidade jurídica',\r\n        value: '99',\r\n    },\r\n];","import { generateNif } from '../../util/nif';\r\nimport { CopyToClipboard } from '../../components/copy-to-clipboard';\r\nimport { ExportCSV } from '../../components/export-csv';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Input from '@material-ui/core/Input';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Logo from '../../images/logo.png';\r\nimport nifTypes from '../../constants/nifTypes';\r\nimport React, { useState } from 'react';\r\n\r\nconst styles = theme => ({\r\n    mainContainer: {\r\n        textAlign: 'center',\r\n    },\r\n    image: {\r\n        margin: '20px auto',\r\n        width: '100px',\r\n    },\r\n    pageTitle: {\r\n        margin: '10px auto',\r\n    },\r\n    formContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column',\r\n        },\r\n    },\r\n    inputContainer: {\r\n        textAlign: 'left',\r\n        [theme.breakpoints.down('xs')]: {\r\n            minWidth: '100%',\r\n        },\r\n    },\r\n    typeContainer: {\r\n        [theme.breakpoints.up('xs')]: {\r\n            minWidth: '340px',\r\n        },\r\n    },\r\n    quantityContainer: {\r\n        [theme.breakpoints.up('xs')]: {\r\n            margin: '0 20px',\r\n        },\r\n        [theme.breakpoints.down('xs')]: {\r\n            margin: '20px 0',\r\n        },\r\n    },\r\n    resultContainer: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        margin: '20px 0',\r\n        flexDirection: 'column',\r\n    },\r\n    resultList: {     \r\n        maxWidth: '250px',\r\n    },\r\n    nif: {\r\n        marginRight: '20px',\r\n    }\r\n});\r\n\r\nconst NifGenerator = (props) => {\r\n    const { classes } = props;\r\n\r\n    const [inputValues, setinputValues] = useState({\r\n        quantity: 1,\r\n        type: 2,\r\n    });\r\n\r\n    const [nifList, setNifList] = useState([]);\r\n\r\n    function handleChange(event) {\r\n        setinputValues(oldValues => ({\r\n            ...oldValues,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n    }\r\n\r\n    function handleGenerateClick() {\r\n        generateNifList();\r\n    }\r\n\r\n    function generateNifList() {\r\n        let newNifList = [];\r\n\r\n        for (let i=0; i < inputValues.quantity; i++) {\r\n            const randomNif = generateNif(inputValues.type);\r\n\r\n            newNifList.push(randomNif);\r\n        }\r\n\r\n        setNifList(() => newNifList)\r\n    }\r\n    \r\n    return (\r\n        <Grid container spacing={2} className={ classes.mainContainer }>\r\n            <Grid item xs={12} className={ classes.header }>\r\n                <img src={Logo} alt='app icon' className={ classes.image } />\r\n                <Typography variant='h4' className={ classes.pageTitle }>\r\n                    NIF Generator\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} className={ classes.formContainer }>\r\n                <FormControl className={`${classes.inputContainer} ${classes.typeContainer}`}>\r\n                    <InputLabel htmlFor=\"type\">\r\n                        Type\r\n                    </InputLabel>\r\n                    <Select\r\n                        value={inputValues.type}\r\n                        onChange={handleChange}\r\n                        className={ classes.input }\r\n                        input={<Input name=\"type\" id=\"type\" />}>\r\n                            {\r\n                                nifTypes.map(nif => (\r\n                                    <MenuItem key={nif.value} value={nif.value}>{`${nif.name} [${nif.value}]`}</MenuItem>\r\n                                ))\r\n                            }\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl className={`${classes.inputContainer} ${classes.quantityContainer}`}>\r\n                    <InputLabel htmlFor=\"quantity\">\r\n                        Quantity\r\n                    </InputLabel>\r\n                    <Select\r\n                        value={inputValues.quantity}\r\n                        onChange={handleChange}\r\n                        className={ classes.input }\r\n                        input={<Input name=\"quantity\" id=\"quantity\" />}>\r\n                        {\r\n                            [...Array(50)].map((e, i) => {\r\n                                i++;\r\n                                return (\r\n                                    <MenuItem key={i} value={i}>{i}</MenuItem>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    onClick={ handleGenerateClick }\r\n                    className={ classes.button }>\r\n                        Generate\r\n                </Button>\r\n            </Grid>\r\n            <Grid item xs={12} className={ classes.resultContainer }>\r\n                { nifList && nifList.length > 0 && <ExportCSV csvData={nifList} fileName='nif-list' /> }\r\n                <List className={ `${classes.resultList}` }>\r\n                    {\r\n                        nifList.map((nif) => (\r\n                            <ListItem key={ nif } >\r\n                                <ListItemText primary={ nif } className={ `${classes.nif}` } />\r\n                                <ListItemSecondaryAction>\r\n                                    <CopyToClipboard value={ nif } />\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        ))\r\n                    }\r\n                </List>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(NifGenerator);\r\n","import React, { Component } from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport ReactGA from 'react-ga';\r\nimport './App.css';\r\nimport { ThemeProvider as MuiThemeProvider } from '@material-ui/core/styles';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport themeFile from './util/theme';\r\nimport { createBrowserHistory } from \"history\";\r\n\r\n// Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/configureStore';\r\n\r\n// Components\r\nimport { NavBar } from './components/nav-bar';\r\n\r\n// Pages\r\nimport { NifGenerator } from './pages/nif-generator/';\r\n\r\nconst theme = createMuiTheme(themeFile);\r\n\r\nReactGA.initialize(\"UA-146599861-1\");\r\n\r\nconst history = createBrowserHistory();\r\n\r\nhistory.listen(location => {\r\n  ReactGA.set({ page: location.pathname });\r\n  ReactGA.pageview(location.pathname);\r\n});\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    ReactGA.pageview(window.location.pathname);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <Provider store={store}>\r\n          <HashRouter basename='/'>\r\n            <NavBar />\r\n            <div className='container'>\r\n              <Switch>\r\n                <Route exact path='/' component={NifGenerator} />\r\n                <Route component={NifGenerator} />\r\n              </Switch>\r\n            </div>\r\n          </HashRouter>\r\n        </Provider>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export default {\r\n    palette: {\r\n        primary: {\r\n        light: '#33c9dc',\r\n        main: '#00bcd4',\r\n        dark: '#008394',\r\n        contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n        light: '#ff6333',\r\n        main: '#ff3d00',\r\n        dark: '#b22a00',\r\n        contrastText: '#fff',\r\n        },\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n    }\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\r\nimport { combineReducers } from 'redux';\r\nimport { reducer as drawer } from '../redux-drawer';\r\n\r\nconst rootReducer = combineReducers({\r\n    drawer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from 'redux';\r\nimport rootReducer from '../shared/state/root-reducer';\r\n\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    initialState\r\n);\r\n\r\nexport default store;","export const OPEN = 'OPEN';\r\nexport const CLOSE = 'CLOSE';","import * as actionTypes from './actionsTypes';\r\n\r\nconst initialState = {\r\n    width: 240,\r\n    open: false\r\n};\r\n\r\nfunction drawerReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case actionTypes.OPEN:\r\n            return {\r\n                ...state,\r\n                open: true\r\n            };\r\n        case actionTypes.CLOSE:\r\n            return {\r\n                ...state,\r\n                open: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default drawerReducer;\r\n"],"sourceRoot":""}